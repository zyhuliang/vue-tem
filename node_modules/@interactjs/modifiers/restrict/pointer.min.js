import{makeModifier as t}from"../base.min.js";import e from"../../utils/extend.min.js";import*as o from"../../utils/is.min.js";import*as i from"../../utils/rect.min.js";export function getRestrictionRect(t,e,r){return o.func(t)?i.resolveRectLike(t,e.interactable,e.element,[r.x,r.y,e]):i.resolveRectLike(t,e.interactable,e.element)}const r={start({rect:t,startOffset:o,state:i,interaction:r,pageCoords:n}){const{options:s}=i,{elementRect:l}=s,c=e({left:0,top:0,right:0,bottom:0},s.offset||{});if(t&&l){const e=getRestrictionRect(s.restriction,r,n);if(e){const o=e.right-e.left-t.width,i=e.bottom-e.top-t.height;o<0&&(c.left+=o,c.right+=o),i<0&&(c.top+=i,c.bottom+=i)}c.left+=o.left-t.width*l.left,c.top+=o.top-t.height*l.top,c.right+=o.right-t.width*(1-l.right),c.bottom+=o.bottom-t.height*(1-l.bottom)}i.offset=c},set({coords:t,interaction:e,state:o}){const{options:r,offset:n}=o,s=getRestrictionRect(r.restriction,e,t);if(!s)return;const l=i.xywhToTlbr(s);t.x=Math.max(Math.min(l.right-n.right,t.x),l.left+n.left),t.y=Math.max(Math.min(l.bottom-n.bottom,t.y),l.top+n.top)},defaults:{restriction:null,elementRect:null,offset:null,endOnly:!1,enabled:!1}};export default t(r,"restrict");export{r as restrict};
//# sourceMappingURL=pointer.min.js.map