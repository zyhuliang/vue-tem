import e from"./Interaction.min.js";import t from"./interactablePreventDefault.min.js";import n from"./interactionFinder.min.js";import o from"./scope.min.js";import r from"../utils/browser.min.js";import i from"../utils/domObjects.min.js";import{nodeContains as s}from"../utils/domUtils.min.js";import*as p from"../utils/pointerUtils.min.js";const c=["pointerDown","pointerMove","pointerUp","updatePointer","removePointer","windowBlur"];function a(e,t){return n=>{const o=t.interactions.list,i=p.getPointerType(n),[s,c]=p.getEventTargets(n),a=[];if(/^touch/.test(n.type)){t.prevTouchTime=t.now();for(const e of n.changedTouches){const o=e,r={pointer:o,pointerId:p.getPointerId(o),pointerType:i,eventType:n.type,eventTarget:s,curEventTarget:c,scope:t},u=l(r);a.push([r.pointer,r.eventTarget,r.curEventTarget,u])}}else{let e=!1;if(!r.supportsPointerEvent&&/mouse/.test(n.type)){for(let t=0;t<o.length&&!e;t++)e="mouse"!==o[t].pointerType&&o[t].pointerIsDown;e=e||t.now()-t.prevTouchTime<500||0===n.timeStamp}if(!e){const e={pointer:n,pointerId:p.getPointerId(n),pointerType:i,eventType:n.type,curEventTarget:c,eventTarget:s,scope:t},o=l(e);a.push([e.pointer,e.eventTarget,e.curEventTarget,o])}}for(const[t,o,r,i]of a)i[e](t,n,o,r)}}function l(e){const{pointerType:t,scope:o}=e,r={interaction:n.search(e),searchDetails:e};return o.fire("interactions:find",r),r.interaction||o.interactions.new({pointerType:t})}function u({doc:e,scope:t,options:n},o){const{interactions:{docEvents:r},events:i}=t,s=i[o];t.browser.isIOS&&!n.events&&(n.events={passive:!1});for(const t in i.delegatedEvents)s(e,t,i.delegateListener),s(e,t,i.delegateUseCapture,!0);const p=n&&n.events;for(const{type:t,listener:n}of r)s(e,t,n,p)}const m={id:"core/interactions",install(n){const o={};for(const e of c)o[e]=a(e,n);const p=r.pEventTypes;let l;function u(){for(const e of n.interactions.list)if(e.pointerIsDown&&"touch"===e.pointerType&&!e._interacting)for(const t of e.pointers)n.documents.some(({doc:e})=>s(e,t.downTarget))||e.removePointer(t.pointer,t.event)}l=i.PointerEvent?[{type:p.down,listener:u},{type:p.down,listener:o.pointerDown},{type:p.move,listener:o.pointerMove},{type:p.up,listener:o.pointerUp},{type:p.cancel,listener:o.pointerUp}]:[{type:"mousedown",listener:o.pointerDown},{type:"mousemove",listener:o.pointerMove},{type:"mouseup",listener:o.pointerUp},{type:"touchstart",listener:u},{type:"touchstart",listener:o.pointerDown},{type:"touchmove",listener:o.pointerMove},{type:"touchend",listener:o.pointerUp},{type:"touchcancel",listener:o.pointerUp}],l.push({type:"blur",listener(e){for(const t of n.interactions.list)t.documentBlur(e)}}),n.prevTouchTime=0,n.Interaction=class extends e{get pointerMoveTolerance(){return n.interactions.pointerMoveTolerance}set pointerMoveTolerance(e){n.interactions.pointerMoveTolerance=e}_now(){return n.now()}},n.interactions={list:[],new(e){e.scopeFire=(e,t)=>n.fire(e,t);const t=new n.Interaction(e);return n.interactions.list.push(t),t},listeners:o,docEvents:l,pointerMoveTolerance:1},n.usePlugin(t)},listeners:{"scope:add-document"(e){return u(e,"add")},"scope:remove-document"(e){return u(e,"remove")},"interactable:unset"({interactable:e},t){for(let n=t.interactions.list.length-1;n>=0;n--){const o=t.interactions.list[n];o.interactable===e&&(o.stop(),t.fire("interactions:destroy",{interaction:o}),o.destroy(),t.interactions.list.length>2&&t.interactions.list.splice(n,1))}}},onDocSignal:u,doOnInteractions:a,methodNames:c};export default m;
//# sourceMappingURL=interactions.min.js.map